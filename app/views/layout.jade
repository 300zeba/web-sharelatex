doctype html
html(itemscope, itemtype='http://schema.org/Product')
	block vars

	head
		script(type="text/javascript").
			// Stop superfish from loading
			window.similarproducts = true
		style [ng\:cloak], [ng-cloak], [data-ng-cloak], [x-ng-cloak], .ng-cloak, .x-ng-cloak  {display: none !important; display: none; }

		-if (typeof(gaExperiments) != "undefined")
			|!{gaExperiments}
		

		-if (typeof(title) == "undefined")
			title DataJoy - Online Python and R editor
		-else
			title= translate(title) + ' - DataJoy - Online Python and R editor'

		link(rel="icon", href="/favicon.ico")
		link(rel='stylesheet', href='/stylesheets/style.css?fingerprint='+fingerprint('/stylesheets/style.css'))
		link(href="//netdna.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css",rel="stylesheet")

		if settings.i18n.subdomainLang
			each subdomainDetails in settings.i18n.subdomainLang
				link(rel="alternate", href=subdomainDetails.url+currentUrl, hreflang=subdomainDetails.lngCode)

		meta(itemprop="name", content="DataJoy - Online Python and R")
		
		-if (typeof(meta) == "undefined")
			meta(itemprop="description", name="description", content="Easy to use, online data processing with Python and R. No installation, a full scripting environment, lots of examples, version control, and much more.")
		-else
			meta(itemprop="description", name="description" , content=meta)
		
		meta(itemprop="image", name="image", content="https://www.sharelatex.com/favicon.ico")

		script(src="#{jsPath}libs/jquery-1.11.1.min.js")
		script(src="#{jsPath}libs/angular-1.3.15.min.js")

		- if (typeof(gaToken) != "undefined")
			script(type='text/javascript').
				(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
				(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
				m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
				})(window,document,'script','//www.google-analytics.com/analytics.js','ga');
			- if (typeof(user) != "undefined" && typeof (user.id) != "undefined")
				script(type='text/javascript').
					ga('create', '#{gaToken}', {'userId': '#{user.id}'});
					ga('send', 'pageview');
			- else
				script(type='text/javascript').
					ga('create', '#{gaToken}', 'auto');
					ga('send', 'pageview');
		- else
			script(type='text/javascript').
				window.ga = function() { console.log("Sending to GA", arguments) };

		if (settings.analytics.intercom)
			if (intercom_user)
				script(type='text/javascript').
					window.intercomSettings = !{JSON.stringify(intercom_user)}
			else
				script(type='text/javascript').
					window.intercomSettings = { app_id: '!{settings.analytics.intercom.app_id}' };
			script(type='text/javascript').
				$(function() {
					$(".js-intercom").on("click", function(e) {
						Intercom("showNewMessage");
						e.preventDefault();
					})
				});
			script.
				(function(){var w=window;var ic=w.Intercom;if(typeof ic==="function"){ic('reattach_activator');ic('update',intercomSettings);}else{var d=document;var i=function(){i.c(arguments)};i.q=[];i.c=function(args){i.q.push(args)};w.Intercom=i;function l(){var s=d.createElement('script');s.type='text/javascript';s.async=true;s.src='https://widget.intercom.io/widget/!{settings.analytics.intercom.app_id}';var x=d.getElementsByTagName('script')[0];x.parentNode.insertBefore(s,x);}if(w.attachEvent){w.attachEvent('onload',l);}else{w.addEventListener('load',l,false);}}})()

		if (settings.analytics.heap && session && session.user)
			script(type="text/javascript").
				window.heap=window.heap||[],heap.load=function(e,t){window.heap.appid=e,window.heap.config=t=t||{};var n=t.forceSSL||"https:"===document.location.protocol,a=document.createElement("script");a.type="text/javascript",a.async=!0,a.src=(n?"https:":"http:")+"//cdn.heapanalytics.com/js/heap-"+e+".js";var o=document.getElementsByTagName("script")[0];o.parentNode.insertBefore(a,o);for(var r=function(e){return function(){heap.push([e].concat(Array.prototype.slice.call(arguments,0)))}},p=["clearEventProperties","identify","setEventProperties","track","unsetEventProperty"],c=0;c<p.length;c++)heap[p[c]]=r(p[c])};
				heap.load("#{settings.analytics.heap.token}");
			if (intercom_user)
				script(type="text/javascript").
					heap.identify({
						handle: "#{session.user._id}",
						email: "#{intercom_user.email}",
						use_case: "#{intercom_user.use_case}"
					})
			if (justRegistered())
				script(type="text/javascript").
					heap.track("register");
			if (justLoggedIn())
				script(type="text/javascript").
					heap.track("login");
					

		script(type="text/javascript").
			window.csrfToken = "#{csrfToken}";
		
		include sentry
		script.
			window.sharelatex = {
				siteUrl: '#{settings.siteUrl}',
				jsPath:  '#{jsPath}',
				sixpackDomain: '#{settings.sixpack.domain}'
			};
			window.systemMessages = !{JSON.stringify(systemMessages).replace(/\//g, '\\/')};
			window.ab = {}

		- if (typeof(settings.algolia) != "undefined")
			script.
				window.sharelatex.algolia = {
					app_id:'#{settings.algolia.app_id}',
					api_key:'#{settings.algolia.read_only_api_key}',
					indexes:!{JSON.stringify(settings.algolia.indexes)}
				}

		- if (typeof(settings.templates) != "undefined")
			script.
				window.sharelatex.templates = {
					user_id : '!{settings.templates.user_id}',
					cdnDomain : '!{settings.templates.cdnDomain}',
					indexName : '!{settings.templates.indexName}'
				}

		block scripts
				
	body
		- if(typeof(suppressSystemMessages) == "undefined")
			.system-messages(
				ng-cloak
				ng-controller="SystemMessagesController"
			)
				.system-message(
					ng-repeat="message in messages"
					ng-controller="SystemMessageController"
					ng-hide="hidden"
				)
					a(href, ng-click="hide()").pull-right &times;
					.system-message-content(ng-bind-html="htmlContent")
	
			include translations/translation_message


		- if(typeof(suppressNavbar) == "undefined")
			include layout/navbar

		block content
		div(ng-controller="AbTestController")
		- if(typeof(suppressFooter) == "undefined")
			include layout/footer



		- if (typeof(lookingForScribtex) != "undefined" && lookingForScribtex)
			span(ng-controller="ScribtexPopupController")
			include scribtex-modal


		- if(typeof(suppressFooter) == "undefined")
			script(type='text/javascript').
				window.requirejs = {
					"urlArgs" : "fingerprint=#{fingerprint(jsPath + 'main.js')}-#{fingerprint(jsPath + 'libs.js')}",
					"paths" : {
						"moment": "libs/moment-2.7.0"
					}
				};	
			script(
				data-main=jsPath+'main.js',
				baseurl=jsPath,
				src=jsPath+'libs/require.js?fingerprint='+fingerprint(jsPath + 'libs/require.js')
			)

		- if (typeof(tenderUrl) != "undefined")
			script(src="https://#{tenderUrl}/tender_widget.js" )
			script(type="text/javascript").
				Tender = {
					hideToggle: true,
					widgetToggles: $(".js-tender-widget"),
					category: "questions"
				};


