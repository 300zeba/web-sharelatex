div.full-size.script-output-pane(ng-controller="ScriptOutputController")
	.toolbar.toolbar-tall
		span(ng-show="!status.running && !status.stopping")
			a.btn.btn-info(
				href,
				ng-click="runSelection()"
			)
				i.fa.fa-fw.fa-play
				| &nbsp; 
				span(ng-show="editor.selection.lines.length == 1") Run Line
				span(ng-show="editor.selection.lines.length > 1") Run Selection
		span(ng-show="!status.running && !status.stopping")
			a.btn.btn-default(
				href,
				ng-click="runAll()"
			)
				| Run Script
		span(ng-show="status.running && !status.stopping")
			a.btn.btn-info(disabled=true)
				i.fa.fa-fw.fa-refresh.fa-spin
				| &nbsp; Running
			a(
				href,
				ng-click="stop()"
			).small
				.i.fa.fa-fw.fa-stop
				|  Stop
		span.pull-right.small-controls
			a(href, ng-click="clearCells()", ng-if="cells[engine].length > 0", tooltip-html="'Clear<br/>Output'", tooltip-placement="bottom")
				i.fa.fa-fw.fa-times
			a(href, ng-click="restart()", tooltip-html="'Restart<br/>Session'", tooltip-placement="bottom")
				i.fa.fa-fw.fa-refresh
			

	include ../link-image

	div.jupyter-output.main-script-output
		.jupyter-output-inner(scroll-glue)
			.jupyter-uncompiled(ng-show="!cells[engine] && !status.running")
				| &nbsp;
				i.fa.fa-level-up.fa-flip-horizontal.fa-2x
				| &nbsp;&nbsp;Click here to run your script...
			.jupyter-uncompiled.jupyter-uncompiled-bottom(ng-show="!cells[engine] && !status.running")
				| &nbsp;
				i.fa.fa-level-down.fa-flip-horizontal.fa-2x
				| &nbsp;&nbsp;Or run a command directly!
			
			div.cell(ng-repeat="cell in cells[engine]", ng-if="cell.execution_count || cell.restarted")
				div.alert.alert-info(ng-show="cell.restarted && !cell.memory_limit_exceeded && !cell.killed_by_user && !cell.timed_out")
					p Session restarted
					p(ng-show="!cell.restart_intentional").small
						| A collaborator may have restarted your session, or we may be
						| performing maintenance on the server your session was running on.

				div.input(ng-if="cell.input.length > 0")
					.execution-count
						| In[{{cell.execution_count}}]:
					.cell-content
						.chunk(ng-repeat="input in cell.input")
							span.text-input.text-monospace {{ input.content.code }}
				div.output(ng-if="cell.output.length > 0")

					.execution-count
						| Out[{{cell.execution_count}}]:
	
					// formatted help output
					.cell-content.pretty-help(ng-if="cell._help")
						.text-output.text-monospace.card.card-thin
								div.help-subject {{ cell._help.subject }}
								div.help-body(ng-bind-html="cell._help.body")

					// normal output
					.cell-content(ng-if="!cell._help")
						.chunk(ng-repeat="msg in cell.output")
							span.text-output.text-monospace(ng-if="msg.header.msg_type == 'stream'", ng-bind-html="msg.content.text_escaped")
							span(ng-if="msg.header.msg_type == 'execute_result'")
								span.text-output.text-monospace(ng-if="msg.content.data['text/plain' ]") {{ msg.content.data['text/plain'] }}
							div.display-data(ng-if="msg.header.msg_type == 'display_data' && msg.content.image")
								.display-data-inner(ng-class="{ 'display-data-inner-full-width': (msg.content.format == 'image/svg+xml' || msg.content.format == 'application/pdf') }")
									a(ng-controller="LinkImageController"
										href
										ng-click="linkImage(msg.content.data[msg.content.format + '+url'], 'output.' + msg.content.format.split('/')[1], msg.content.data[msg.content.format], msg.content)")
										display-image(format="msg.content.format",data="msg.content.data")
										.download-controls(ng-if="msg.content.available_formats.length > 1")
											div(dropdown).format-dropdown
												a(href, dropdown-toggle, tooltip="Format")
													i.fa.fa-fw.fa-cog
													i.fa.fa-caret-down
												ul.dropdown-menu(role="menu")
													li(ng-repeat="format in msg.content.available_formats")
														a(href, ng-click="showFormat(msg, format)")
															show-format-label(format="format") 
										.download-controls.download-controls-right
											a(
												ng-if="msg.content.format != 'image/svg+xml'",
												ng-href="{{msg.content.data[msg.content.format + '+url']}}",
												download="output",
												tooltip="Download",
												tooltip-placement="bottom"
											)
												i.fa.fa-fw.fa-download
											a(
												ng-controller="LinkImageController"
												href
												ng-click="linkImage(msg.content.data[msg.content.format + '+url'], 'output.' + msg.content.format.split('/')[1], msg.content.data[msg.content.format], msg.content)",
												tooltip="Share",
												tooltip-append-to-body="true",
												tooltip-placement="bottom"
											)
												i.fa.fa-fw.fa-link
							div(ng-if="msg.header.msg_type == 'display_data' && !msg.content.image")
								div(ng-if="msg.content.show_format == 'text/html_escaped'", ng-bind-html="msg.content.data['text/html_escaped']")
							div(ng-if="msg.header.msg_type == 'error' && msg.content.type == 'missing_package'").alert.alert-danger.text-monospace.text-center
								p The '{{ msg.content.package }}' package is not installed.
								p
									a(href, ng-click="installPackage(msg.content.package, msg.content.language)").btn.btn-info Install now
							div(ng-if="msg.header.msg_type == 'error' && msg.content.type != 'missing_package'").alert.alert-danger.text-monospace.text-output.ansi-error
								div {{ msg.content.evalue }}
								div(ng-repeat="line in msg.content.traceback_escaped", ng-bind-html="line")
									div.output-file(ng-if="part.output_type == 'file' && !part.ignore")
							div.file-modified(ng-if="msg.header.msg_type == 'file_modified' && msg.content.file_type != 'image'")
								div.text-center(ng-show="!cell.exported")
									i.fa.fa-2x.fa-spin.fa-spinner
									
								.download-controls.download-controls-right(ng-show="cell.exported", ng-controller="LinkImageController", ng-init="url = msg.content.data['text/url']; path = msg.content.data['text/path']")
									a(
										ng-href="{{url + (url.indexOf('?') == -1 ? '?' : '&') + 'download=1'}}",
										tooltip="Download",
										tooltip-append-to-body="true",
										tooltip-placement="bottom"
									)
										i.fa.fa-download
								
									a(
										href
										ng-click="linkImage(url, path)",
										tooltip="Share",
										tooltip-append-to-body="true",
										tooltip-placement="bottom"
									)
										i.fa.fa-fw.fa-link

								.file-written(ng-if="cell.exported")
									.small File written
									div
										a(ng-href="{{msg.content.data['text/url']}}", target="_blank") {{ msg.content.data['text/path'] }}
							
							div.file-modified-image(ng-if="msg.header.msg_type == 'file_modified' && msg.content.file_type == 'image'")
								.file-modified-image-inner
									div.text-center(ng-show="!cell.exported")
										i.fa.fa-2x.fa-spin.fa-spinner
										
									.download-controls.download-controls-right(ng-show="cell.exported", ng-controller="LinkImageController", ng-init="url = msg.content.data['text/url']; path = msg.content.data['text/path']")
										a(
											ng-href="{{url + (url.indexOf('?') == -1 ? '?' : '&') + 'download=1'}}",
											tooltip="Download",
											tooltip-append-to-body="true",
											tooltip-placement="bottom"
										)
											i.fa.fa-fw.fa-download
									
										a(
											href
											ng-click="linkImage(url, path)",
											tooltip="Share",
											tooltip-append-to-body="true",
											tooltip-placement="bottom"
										)
											i.fa.fa-fw.fa-link
										
									img(ng-if="cell.exported", ng-src="{{msg.content.data['text/url']}}")
							
							div.input_request(ng-controller="InputRequestController", ng-if="msg.header.msg_type == 'input_request'")
								div.prompt {{ msg.content.prompt }}
								div.input
									input(
										type="text",
										autofocus,
										ng-model="rawInput",
										on-enter="replyWithInput(rawInput)",
										ng-disabled="sentInput || !status.running"
									)

				.alert.alert-danger(ng-if="cell.killed_by_user")
					p
						strong #{translate("Command terminated")}.
						span(ng-show="cell.restarted") Your session has been restarted.

				.alert.alert-danger(ng-if="cell.timed_out")
					p
						strong #{translate("timedout")}. 
						span Sorry, your script took too long to run and timed out.
					p.text-center(ng-if="project.features.compileTimeout <= 60 && permissions.admin", ng-controller="FreeTrialModalController", ng-init="recordFreeTrialShown('timeout')")
						| Please upgrade your account to run longer scripts.
						br
						a.btn.btn-info.row-spaced-small(
							href
							ng-click="startFreeTrial('timeout')"
						) #{translate("start_free_trial")}
					p(ng-if="project.features.compileTimeout > 60")
						| Please get in touch if you need a longer timeout.
				
				.alert.alert-danger(ng-if="cell.memory_limit_exceeded")
					p
						strong Memory limit exceeded. 
						span Sorry, your project exceeded your memory limit of {{project.features.compileMemory}}Mb. 
						span(ng-show="cell.restarted") Your session has been restarted.
					p.text-center(ng-if="project.features.compileMemory <= 1024 && permissions.admin", ng-controller="FreeTrialModalController", ng-init="recordFreeTrialShown('memory')")
						| Please upgrade your account for a larger memory limit.
						br
						a.btn.btn-info.row-spaced-small(
							href
							ng-click="startFreeTrial('memory')"
						) #{translate("start_free_trial")}
					p(ng-if="project.features.compileMemory > 1024")
						| Please get in touch if you need a higher limit.
						
				hr(ng-show="!$last")
			
			.alert.alert-info(ng-show="status.initing")
				p
					i.fa.fa-spinner.fa-spin.fa-fw 
					|  Initializing environment...
				p.small (This can take a while the first time you run something)
			
			.alert.alert-danger(ng-if="status.error")
				| Sorry, something went wrong running your request. Please try again.
			
		div.manual-input.border-top
			div.input
				.execution-count
					| In[]:
				.cell-content
					textarea(
						ng-model="manualInput",
						command-line,
						expand-to-content-height,
						expand-to-content-height-max="200",
						on-run="runManualInput()",
						placeholder = "Command...",
						ng-focus="ui.chatOpen || showInterCom(false)",
						ng-blur="showInterCom(true)"
						ng-keydown="preventTabFocus($event)"
					)
